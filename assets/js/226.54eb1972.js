(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{1444:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"实战脚本简述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实战脚本简述"}},[s._v("#")]),s._v(" 实战脚本简述")]),s._v(" "),t("h2",{attrs:{id:"流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[s._v("#")]),s._v(" 流程控制")]),s._v(" "),t("h3",{attrs:{id:"if"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[s._v("#")]),s._v(" if")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t\t程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t\t条件成立时，执行的程序\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n\t\t条件不成立时，执行的另一个程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t\t条件成立时，执行的程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n\t\t条件成立时，执行的程序\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".省略更多条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n\t\t条件不成立时，执行的另一个程序\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("h3",{attrs:{id:"case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[s._v("#")]),s._v(" case")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" $变量名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"值1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t如果变量的值等于值1，则执行程序1\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"值1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t如果变量的值等于值2，则执行程序2\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t…省略其他分支…\n\n\t*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t如果变量的值都不是以上的值，则执行此程序\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("h3",{attrs:{id:"for"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[s._v("#")]),s._v(" for")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 变量 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 值1 值2 值3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" \n\t\t程序\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" 初始值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("循环控制条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("变量变化 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\t\t程序\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h3",{attrs:{id:"while"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[s._v("#")]),s._v(" while")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        程序\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h3",{attrs:{id:"until"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#until"}},[s._v("#")]),s._v(" until")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("until")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" 条件判断式 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\t\t程序\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("h3",{attrs:{id:"特殊控制语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊控制语句"}},[s._v("#")]),s._v(" 特殊控制语句")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("返回值"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("break")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("continue")]),s._v("\n")])])]),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" 函数名 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t程序\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"工具命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工具命令"}},[s._v("#")]),s._v(" 工具命令")]),s._v(" "),t("h3",{attrs:{id:"cut"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cut"}},[s._v("#")]),s._v(" cut")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cut [选项]  文件名")]),s._v("\n常见选项：\n    -c:\t以字符为单位进行分割,截取\n    -d:\t自定义分隔符，默认为制表符"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t\n    -f:\t与-d一起使用，提取第几列\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo "zs=123=456=789" | cut -d "=" -f 1,2,4')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("zs")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("789")]),s._v("\n")])])]),t("h3",{attrs:{id:"wc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wc"}},[s._v("#")]),s._v(" wc")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wc [选项] 文件名")]),s._v("\n选项：\n    -l：只统计行数\n    -w：只统计单词数\n    -m：只统计字符数\n")])])]),t("h3",{attrs:{id:"seq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#seq"}},[s._v("#")]),s._v(" seq")]),s._v(" "),t("p",[t("code",[s._v("seq")]),s._v(": 是一个序列（squeue ）的缩写，主要用来输出序列化的东西")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 尾数\t\t\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#从到尾数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 首数 尾数\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#从首数到尾数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("seq")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 首数 增量 尾数\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#从首数以增量到尾数")]),s._v("\n\n以指定增量从首数开始打印数字到尾数。\n\n常用选项：\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v("\t使用printf 样式的浮点格式\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v("\t使用指定字符串分隔数字"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("默认使用："),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v("\t在列前添加0 使得宽度相同【自动补位】\n")])])]),t("p",[s._v("指定分割符")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq -s '#' 5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#2#3#4#5")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq -s ' ' 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq -w 10")]),s._v("\n01\n02\n03\n04\n05\n06\n07\n08\n09\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n")])])]),t("p",[s._v("产生范围数字")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("产生-2~10内的整数，增量为2：\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# seq -2 2 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\n\n产生98~101之间的整数，并且要求输出数字宽度相同，不足的用0或空格补足：\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# seq -f "%03g" 98 101')]),s._v("\n098\n099\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@server1 mnt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# seq -f "%3g" 98 101   ')]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("98")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n\n注意：通过%后添加0替代空格补足空位\n")])])]),t("h3",{attrs:{id:"awk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[s._v("#")]),s._v(" awk")]),s._v(" "),t("h3",{attrs:{id:"sed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" sed")]),s._v(" "),t("h3",{attrs:{id:"column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#column"}},[s._v("#")]),s._v(" column")]),s._v(" "),t("p",[s._v("column对齐字段")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("常用选项：\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ：表格，默认以空格间隔\n    -s：需要配合-t使用，指定分隔符\n")])])]),t("p",[s._v("获取的文档版式比较乱")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt \n10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("161 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" SUCCESS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" rc=0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 21\n10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("33 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" SUCCESS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" rc=0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 22\n10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("10"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" SUCCESS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" rc=0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 62\n")])])]),t("p",[s._v("排版")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" tee.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.161  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.33   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.1    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v("\n")])])]),t("p",[s._v("sort 多"),t("a",{attrs:{href:"https://so.csdn.net/so/search?q=%E9%87%8D%E6%8E%92%E5%BA%8F&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("重排序"),t("OutboundLink")],1),s._v("整理")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" tee.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k5r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.97   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.98   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.99   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.129  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.130  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.131  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.1    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),s._v(".10.2    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  SUCCESS  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v("\n")])])]),t("h3",{attrs:{id:"expr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expr"}},[s._v("#")]),s._v(" expr")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("正确： 所有操作符的两边，都需要有空格。\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr 1 + 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),t("p",[t("strong",[s._v('"index string chars"用法示例。')])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index abcde dec   # 在 abcde 中搜索 d 在第几个位置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index abcde xdc   # 在 abcde 中搜索x没有，在搜索d")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index abcde 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n")])])]),t("p",[t("strong",[s._v('"substr string pos len"用法示例。')])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("该表达式是从string中取出从pos位置开始长度为len的子字符串。如果pos或len为非正整数时，将返回空字符串。\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr substr abcde 2 3")]),s._v("\nbcd\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  expr substr abcde 2 4")]),s._v("\nbcde\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  expr substr abcde 2 5")]),s._v("\nbcde\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  expr substr abcde 2 0")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr substr abcde 2 -1")]),s._v("\n")])])]),t("p",[t("strong",[s._v('"length string"用法示例。该表达式是返回string的长度，其中string不允许为空，否则将报错，所以可以用来判断变量是否为空。')])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr length abcde")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr length 111")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $xxx")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr length $xxx")]),s._v("\nexpr: syntax error\n")])])]),t("p",[t("strong",[s._v('"+ token"用法示例。')])]),s._v(" "),t("p",[s._v('expr中有些符号和关键字有特殊意义，如"match"、"index"、"length"，如果要让其成为字符，使用该表达式将任意token强制解析为普通字符串。格式：expr index 特殊关键字')]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index index d")]),s._v("\nexpr: 语法错误\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index length g")]),s._v("\nexpr: 语法错误\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index + length g")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])])]),t("p",[s._v("对值为关键字的变量来说，则无所谓。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# len=lenght")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost scripts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr index $len g")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n")])])]),t("p",[t("strong",[s._v('"string : REGEX"字符串匹配示例。要输出匹配到的字符串结果，需要使用"，否则返回的将是匹配到的字符串数量。')])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#expr abcde : 'ab\\(.*\\)'   # 'ab\\(.*\\)'  ab代表不匹配 .代表匹配一个  .*匹配所有  \\是为了转移字符，转移(  和)")]),s._v("\ncde\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr abcde : 'ab\\(.\\)'")]),s._v("\nc\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr abcde : 'ab\\(..\\)'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr abcde : 'ab.*'    #  不写() 代表反馈匹配上的数字各个数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr abcde : 'ab.'   ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr abcde : '.*cd*'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat abc")]),s._v("\nabcdwe\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expr `cat abc` : 'ab\\(..\\)'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("\n")])])]),t("h3",{attrs:{id:"grep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep [选项] '关键字' 文件名")]),s._v("\n选项：\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i：\t\t\t\t忽略大小写\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n：\t\t\t\t输出行号\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v：\t\t\t\t反向查找 \n    ^"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[a-z]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[x]")]),s._v("正则符号\n    ^$\t\t\t\t匹配空行\n\t^"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":space:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#\t匹配空行，匹配零个或多个空白字符，这包括空格、制表符和其他类型的空白字符")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -n 'root' passwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -ni 'root' passwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep '^root' passwd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep 'root$' passwd")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -i root passwd\t\t\t\t\t\t忽略大小写匹配包含root的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -w ftp passwd \t\t\t\t\t\t精确匹配ftp单词")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -w hello passwd \t\t\t\t\t\t精确匹配hello单词;自己添加包含hello的行到文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -wo ftp passwd \t\t\t\t\t\t打印匹配到的关键字ftp")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -n root passwd \t\t\t\t\t\t打印匹配到root关键字的行好")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -ni root passwd \t\t\t\t\t\t忽略大小写匹配统计包含关键字root的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -nic root passwd\t\t\t\t\t\t忽略大小写匹配统计包含关键字root的行数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -i ^root passwd \t\t\t\t\t\t忽略大小写匹配以root开头的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep bash$ passwd \t\t\t\t\t\t\t匹配以bash结尾的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -n ^$ passwd \t\t\t\t\t\t\t匹配空行并打印行号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep ^# /etc/vsftpd/vsftpd.conf\t\t匹配以#号开头的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -v ^# /etc/vsftpd/vsftpd.conf\t匹配不以#号开头的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -A 5 mail passwd \t\t\t\t \t匹配包含mail关键字及其后5行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -B 5 mail passwd \t\t\t\t \t匹配包含mail关键字及其前5行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -C 5 mail passwd \t\t\t\t\t匹配包含mail关键字及其前后5行")]),s._v("\n")])])]),t("h3",{attrs:{id:"sort"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" sort")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sort [选项] 文件名")]),s._v("\n常用选项：\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" ：去除重复行\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" ：降序排列，默认是升序\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" ：以数字排序，默认是按字符排序\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" ：分隔符\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-k")]),s._v(" ：第N列\n")])])]),t("h2",{attrs:{id:"符号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#符号"}},[s._v("#")]),s._v(" 符号")]),s._v(" "),t("h3",{attrs:{id:"输出重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出重定向"}},[s._v("#")]),s._v(" 输出重定向")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("命令 &>"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dev/null\n命令 >"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dev/null 2>&1\n")])])]),t("h3",{attrs:{id:"多命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多命令"}},[s._v("#")]),s._v(" 多命令")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t同时执行\n\n\n&& \t$?=0，则命令2执行\n\t$?≠0，命令2不执行\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("\t$?≠0，则命令2执行\n\t$?=0，命令2不执行\n\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls && echo yes || echo no")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# [ -n "$aa" -a "$aa" -gt 23 ] && echo yes || echo no')]),s._v("\n")])])]),t("h3",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\t单引号\n单引号中的特殊符号没有特殊意义：如 $、"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\t双引号\n特殊符号没有含义，$、"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("、"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v(" 例外\n\n`"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("\t反引号\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("`"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("推荐使用"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bash中会先执行其中的命令\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t引用系统命令\n\n$"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t变量引用\n变量引用更加强大，可对变量进行字符串截取\n\n$变量名 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${变量名}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t条件判断\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("$\t转移符：输出 $\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t在子shell中执行\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" 命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t在当前shell中执行\n")])])]),t("h3",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("定义、引用\n$变量名 或 $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("变量名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# test="$test"456')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=${test}789")]),s._v("\n\n`` == $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=`date`")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=$(date)")]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" 变量名\t变量删除\n")])])]),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set [选项]")]),s._v("\n选项：\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u:\t如果设定此选项，调用未声明变量时会报错（默认无任何提示）\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("x:\t如果设定此选项，在命令执行之前，会吧命令先输出一次\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u 更为常用\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#直接使用set命令，会查询系统中所有的变量，包含用户自定义变量和环境变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env看不到用户自定义变量，可以看到另一部分环境变量")]),s._v("\n")])])]),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[s._v("local 定义局部变量\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" Hello"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        local text="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!!!"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#局部变量")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$text")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nshell脚本中定义的变量是global的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("其作用域从被定义的地方开始，到shell结束或被显示删除的地方为止。\n如果同名，Shell函数定义的local变量会屏蔽脚本定义的global变量。\n")])])]),t("h3",{attrs:{id:"环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用export声明的变量即是环境变量")]),s._v("\n方式一：\nexport 变量名=变量值\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export ZS_AGE="18"')]),s._v("\n\n方式二：\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ZS_AGE="18"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export ZS_AGE")]),s._v("\n\n")])])]),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#直接使用set命令，会查询系统中所有的变量，包含用户自定义变量和环境变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env看不到用户自定义变量，可以看到另一部分环境变量")]),s._v("\n")])])]),t("h3",{attrs:{id:"位置参数变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位置参数变量"}},[s._v("#")]),s._v(" 位置参数变量")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$n")]),s._v("\t第n位参数，0-9以内用 "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$n")]),s._v("，10以上的用 "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${10}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v("\t把所有参数看成一个整体\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v("\t代办所有参数，每个参数区分对待\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v("\t所有参数个数\n")])])]),t("h3",{attrs:{id:"预定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预定义变量"}},[s._v("#")]),s._v(" 预定义变量")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\t最后一次执行命令的返回状态\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v("\t当前进程的进程号（PID）\n\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v("\t后台运行的最后一个进程的进程号（PID）\n\n其中"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("最为常用\n")])])]),t("h3",{attrs:{id:"接收键盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接收键盘"}},[s._v("#")]),s._v(" 接收键盘")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read [选项] [变量名]")]),s._v("\n选项：\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\t“提示信息”：\t  在等待read输入时，输出提示信息\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("\t秒数：\t\t read命令会一直等待用户输入，使用此选项可以指定等待时间\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v("\t字符数：\tread命令只接受指定的字符数，就会执行\n\t-s：\t\t\t  隐藏输入的数据，适用于机密信息的输入\n\t\n变量名：\n\t- 变量名可以自定义，如果不指定变量名，会把输入保存入默认变量"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("REPLY")]),s._v("\n\t- 如果只提供了一个变量名，则整个输入行赋予该变量\n\t- 如果提供了一个以上的变量名，则输入行分为若干字，一个接一个地赋予各个变量，\n\t  而命令行上如果提供了一个以上的变量名，则输入行分为若干字，一个接一个地赋予各个变量，而命令行上\n")])])]),t("h3",{attrs:{id:"条件判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[s._v("#")]),s._v(" 条件判断")]),s._v(" "),t("p",[s._v("文件类型")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("格式一：\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test [选项] 文件")]),s._v("\n\n格式二：最常用格式\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# [ 选项 文件 ]")]),s._v("\n\n常用选项：\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\t判断文件在不在\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v("\t在且是普通文件\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-L")]),s._v("\t在且是链接文件\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v("\t判断是否是目录\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v("  文件是否存在，或文件是否非空\n")])])]),t("p",[s._v("文件权限")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("常用选项：\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("\t读\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v("\t写\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-x")]),s._v("\t执行\n")])])]),t("p",[s._v("两个整数比较")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("常用选项：\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-eq")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" num2\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ne")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" num2\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-gt")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  num2\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-lt")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("  num2\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ge")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" num2\n    num1 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-le")]),s._v(" num2\t\tnum1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" num2\n")])])]),t("p",[s._v("字符串比较")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("常用选项：\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" str\t\tisBlank?\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" str\t\tisNotBlank?\n    str1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" str2\t"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("str2\t\n    str1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("\tstr2\tstr1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("str2\n")])])]),t("p",[s._v("多重条件")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" \t与\n"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v("\t或\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\t非\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# [ -n "$aa" -a "$aa" -gt 23 ] && echo yes || echo no')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n")])])]),t("h3",{attrs:{id:"、-、-、-、-、-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#、-、-、-、-、-区别"}},[s._v("#")]),s._v(" $[ ] 、${ }、$( )、[ ]、[[ ]]、(())区别")]),s._v(" "),t("p",[t("code",[s._v("$()")]),s._v("命令替换，等价于````` ```出现嵌套时只能使用"),t("code",[s._v("$()")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$( ) \nfinish_time=$(date)\n")])])]),t("p",[t("code",[s._v("$[ ]")]),s._v("运算操作符，等价于"),t("code",[s._v("$(( ))")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("xjh@ubuntu:~/iot/tmp$ echo $[3*5]\n15\nxjh@ubuntu:~/iot/tmp$ echo $[(3+4)*5]\n35\nxjh@ubuntu:~/iot/tmp$\n")])])]),t("p",[t("code",[s._v("${ }")]),s._v(" 变量使用操作符，有很多丰富的功能，简单引用"),t("code",[s._v("$变量名")])]),s._v(" "),t("p",[t("code",[s._v("[ ]")]),s._v(" test测试简写形式")]),s._v(" "),t("p",[t("code",[s._v("[[ ]]")]),s._v(" test升级版")]),s._v(" "),t("p",[t("code",[s._v("(())")])]),s._v(" "),t("p",[s._v("())是一个数学计算命令，用于对整数进行数学运算，比如((a=10+66)）。")]),s._v(" "),t("p",[s._v("具体见博客"),t("a",{attrs:{href:"https://blog.csdn.net/oqqHuTu12345678/article/details/125587460",target:"_blank",rel:"noopener noreferrer"}},[s._v("数学计算命令（expr、(())、bc、declare等）"),t("OutboundLink")],1),s._v("中关于(())的介绍。")]),s._v(" "),t("h2",{attrs:{id:"其他-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他-2"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),t("h3",{attrs:{id:"sh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sh"}},[s._v("#")]),s._v(" sh")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v("\nshell命令解释器\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n选项:\n    "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" string：命令从-c后的字符串读取。\n    -i：实现脚本交互。\n    -n：进行shell脚本的语法检查。\n    -x：实现shell脚本逐条语句的跟踪。\n\n常用形式：sh "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-xc")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls"')]),s._v("\n")])])]),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@AY1307311912260196fcZ satools]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sh -x check_ssh_login.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFINE")]),s._v("=30\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("log/secure\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Failed/ {++ip[$(NF-3)]} END {for (i in ip) print i\"=\"ip[i]}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root/satools/black"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i in "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'`cat /root/satools/black.txt`'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16=1427\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" awk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("F= "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" IP=121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16=1427\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" awk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("F= "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" NUM=1427\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'['")]),s._v(" 1427 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-gt")]),s._v(" 30 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("']'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" grep 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc/hosts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deny\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'['")]),s._v(" 1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-gt")]),s._v(" 0 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("']'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" sshd:121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" vsftpd:121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("16\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i in "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'`cat /root/satools/black.txt`'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72=276\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" awk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("F= "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" IP=121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" awk "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("F= "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72=276\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" NUM=276\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'['")]),s._v(" 276 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-gt")]),s._v(" 30 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("']'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" grep 121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc/hosts"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deny\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'['")]),s._v(" 1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-gt")]),s._v(" 0 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("']'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" sshd:121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("echo")]),s._v(" vsftpd:121"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("42"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("72\n")])])]),t("h2",{attrs:{id:"变量-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量-2"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("h3",{attrs:{id:"数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[s._v("#")]),s._v(" 数组")]),s._v(" "),t("p",[s._v("在Linux中，可以使用以下方式定义和使用数组：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("使用括号和空格将数组元素括起来，每个元素之间用空格分隔。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"banana"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orange"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用索引访问数组元素，索引从0开始。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：apple")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("*")]),s._v("或"),t("code",[s._v("@")]),s._v("可以获取数组中的所有元素。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：apple banana orange")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("#")]),s._v("可以获取数组的长度。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：3")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("+=")]),s._v("可以向数组中添加元素。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"grape"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：apple banana orange grape")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("unset")]),s._v("可以删除数组中的元素。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出：apple orange grape")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用循环遍历数组中的元素。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$item")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("循环来遍历数组，并获取每个元素的键和值")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key1=value1"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key2=value2"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key3=value3"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环遍历数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用IFS（内部字段分隔符）将键和值分割开")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ra")]),s._v(" array "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$item")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出键和值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Key: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$key")]),s._v(", Value: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$value")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("循环来遍历数组，并获取每个元素的索引和值。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("my_array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取数组长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("length")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环遍历数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("$length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取索引和值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("index")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${my_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出索引和值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Index: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$index")]),s._v(", Value: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$value")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n在上述示例中，我们首先定义了一个数组my_array。然后，使用length变量获取数组的长度。接下来，使用for循环遍历数组，并在循环体中获取每个元素的索引和值。最后，我们输出索引和值。\n\n请注意，上述示例中的数组索引从0开始计数。如果你希望从1开始计数，可以在输出索引时将"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v("替换为"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("。\n")])])])])]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("read")]),s._v("命令结合循环结构来遍历以英文逗号分割的字符串")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个包含逗号分割值的字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple,banana,orange,grape"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用IFS（内部字段分隔符）将字符串按逗号分割成数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("IFS")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ra")]),s._v(" arr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$str")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环遍历数组中的每个值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$item")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("去除数组中的重复元素")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个包含重复元素的数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"banana"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orange"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"grape"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"banana"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用sort和uniq命令去除重复元素")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sorted_arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印去重后的数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${sorted_arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一个包含重复元素的数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"banana"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"orange"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"apple"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"grape"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"banana"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明关联数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" unique_arr\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 遍历原始数组，将每个元素作为关联数组的键，如果键不存在，则将其值设置为1，否则将其值递增1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("item")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    unique_arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$item")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印去重后的数组（关联数组的键即为去重后的元素）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("unique_arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("数组拷贝")]),s._v(" "),t("blockquote",[t("p",[s._v("在操作数组前拷贝一份数组是一种常见的做法，可以避免直接修改原始数组，从而避免循环过程中出现异常。你可以使用以下代码来复制一个数组：")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 原始数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("original_array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"element1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"element2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"element3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("copied_array")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${original_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在复制的数组上进行操作")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("element")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${copied_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$element")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("关联数组允许你将键与值相关联，类似于Map数据结构。")]),s._v(" "),t("blockquote",[t("p",[s._v("要在Shell中使用关联数组，首先需要声明一个关联数组变量。以下是一个示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v(" map_array\n")])])]),t("p",[s._v("接下来，你可以通过键来添加或修改关联数组中的值。以下是一个示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("map_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value1"')]),s._v("\nmap_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"value2"')]),s._v("\n")])])]),t("p",[s._v("要获取关联数组中的值，可以使用键来索引关联数组。以下是一个示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("value1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${map_array["')]),s._v("key1"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]}"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("value2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${map_array["')]),s._v("key2"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]}"')]),s._v("\n")])])]),t("p",[s._v("要删除关联数组中的键值对，可以使用"),t("code",[s._v("unset")]),s._v("命令。以下是一个示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("bashunset "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"map_array["')]),s._v("key1"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"]"')]),s._v("\n")])])]),t("p",[s._v("要遍历关联数组中的所有键值对，可以使用循环结构。以下是一个示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("map_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Key: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$key")]),s._v(", Value: "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${map_array"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("$key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("以上就是在Shell中使用关联数组作为Map数据结构的基本用法。通过使用关联数组，你可以在Shell中实现类似Map数据结构的操作。")])]),s._v(" "),t("p",[s._v("shell判断变量未赋值和变量为空字符")]),s._v(" "),t("blockquote",[t("ol",[t("li",[s._v("判断变量是否未赋值：")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${variable+x}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"变量未赋值"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"变量已赋值"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("上述代码中，"),t("code",[s._v("${variable+x}")]),s._v("表示如果变量"),t("code",[s._v("variable")]),s._v("被赋值，则返回"),t("code",[s._v("x")]),s._v("，否则返回空字符串。通过使用"),t("code",[s._v("-z")]),s._v("选项，我们可以判断空字符串是否为真，从而判断变量是否未赋值。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("判断变量是否为空字符串：")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-z")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$variable")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"变量为空字符串"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"变量不为空字符串"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("上述代码中，"),t("code",[s._v("-z")]),s._v("选项用于判断变量是否为空字符串。如果变量为空字符串，则返回真，否则返回假。")])]),s._v(" "),t("h4",{attrs:{id:"数组合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组合并"}},[s._v("#")]),s._v(" 数组合并")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义两个数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素4"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素5"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素6"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印合并后的数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n\n//元素1 元素2 元素3 元素4 元素5 元素6\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义两个数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素1"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素2"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素4"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素5"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"元素6"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 合并数组并修改原始数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印合并后的数组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v("\n\n//元素1 元素2 元素3 元素4 元素5 元素6 \n")])])]),t("h2",{attrs:{id:"常用代码段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用代码段"}},[s._v("#")]),s._v(" 常用代码段")]),s._v(" "),t("h3",{attrs:{id:"当前脚本文件目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#当前脚本文件目录"}},[s._v("#")]),s._v(" 当前脚本文件目录")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("$(")]),s._v("dirname $0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取脚本所在路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("script_path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("BASH_SOURCE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"脚本所在路径：'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$script_path")]),s._v('"')]),s._v("\n")])])]),t("h3",{attrs:{id:"shell调用另一个脚本中的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell调用另一个脚本中的方法"}},[s._v("#")]),s._v(" shell调用另一个脚本中的方法")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("直接调用")]),s._v(":")])]),s._v(" "),t("p",[s._v("如果你知道另一个脚本中的函数名称，你可以直接在当前的脚本中调用它。")]),s._v(" "),t("p",[s._v("例如，假设你有两个脚本："),t("code",[s._v("script1.sh")]),s._v(" 和 "),t("code",[s._v("script2.sh")]),s._v("。在 "),t("code",[s._v("script2.sh")]),s._v(" 中，有一个名为 "),t("code",[s._v("myFunction")]),s._v(" 的函数。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script2.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("myFunction")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello from myFunction in script2.sh"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("你可以在 "),t("code",[s._v("script1.sh")]),s._v(" 中直接调用这个函数：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# script1.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" script2.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入script2.sh中的函数和变量等")]),s._v("\n\nmyFunction  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调用script2.sh中的函数")]),s._v("\n")])])]),t("ol",[t("li",[t("strong",[s._v("使用源命令 (source)")]),s._v(":")])]),s._v(" "),t("p",[t("code",[s._v("source")]),s._v(" 命令用于读取并执行指定脚本中的命令。这允许你在当前的shell环境中执行脚本，这意味着脚本中定义的任何函数或变量都将在当前环境中可用。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /path/to/script2.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用source命令导入script2.sh中的函数和变量等")]),s._v("\n")])])]),t("ol",[t("li",[t("strong",[s._v("使用点号 (.)")]),s._v(":")])]),s._v(" "),t("p",[s._v("点号也可以用来执行脚本，与 "),t("code",[s._v("source")]),s._v(" 命令类似，但它不会创建新的子shell。这意味着脚本中定义的任何函数或变量都将在当前环境中可用。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /path/to/script2.sh  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用点号执行script2.sh中的函数和变量等")]),s._v("\n")])])]),t("ol",[t("li",[t("strong",[s._v("使用bash的 "),t("code",[s._v("-c")]),s._v(" 选项")]),s._v(":")])]),s._v(" "),t("p",[s._v("如果你只想执行脚本中的一行命令，可以使用 "),t("code",[s._v("-c")]),s._v(" 选项：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"source /path/to/script2.sh"')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入script2.sh中的函数和变量等，但不会在当前环境中使用它们，因为它们是在新的子shell中定义的。")]),s._v("\n")])])]),t("ol",[t("li",[t("strong",[s._v("注意点")]),s._v(":")])]),s._v(" "),t("ul",[t("li",[s._v("当使用 "),t("code",[s._v("source")]),s._v(" 或点号时，脚本中的任何变量或函数都将在当前shell环境中定义。如果你不想改变当前的环境，使用子shell可能是更好的选择。你可以使用 "),t("code",[s._v('bash -c "command"')]),s._v(" 的形式来在子shell中执行命令。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);