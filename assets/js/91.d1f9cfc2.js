(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{1374:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_3、变量和运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、变量和运算符"}},[s._v("#")]),s._v(" 3、变量和运算符")]),s._v(" "),t("h2",{attrs:{id:"变量定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量定义"}},[s._v("#")]),s._v(" 变量定义")]),s._v(" "),t("p",[s._v("在Bash中，在定义变量时，有一些规则需要遵守：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("变量名称可以由"),t("font",{attrs:{color:"red"}},[s._v("字母、数字、下划线")]),s._v("组成，但是"),t("font",{attrs:{color:"red"}},[s._v("不能以数字开头")]),s._v("。")],1)]),s._v(" "),t("li",[t("p",[s._v("变量的默认类型都是字符串型，如果要进行数值运算，则必修指定变量类型为数值型。")])]),s._v(" "),t("li",[t("p",[s._v("变量用等号连接值，"),t("font",{attrs:{color:"red"}},[t("strong",[s._v("等号左右两侧不能有空格")])]),s._v("。")],1)]),s._v(" "),t("li",[t("p",[s._v("变量的值如果有空格，需要使用单引号或双引号包括。\n如："),t("code",[s._v('test="hello world!"')]),s._v("\n其中双引号括起来的内容“$”、“\\”和反引号都拥有特殊含义，而单引号括起来的内容都是普通字符。")])]),s._v(" "),t("li",[t("p",[s._v("在变量的值中，可以使用“\\”转义符。")])]),s._v(" "),t("li",[t("p",[s._v('如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含"'),t("code",[s._v("$变量名")]),s._v('"或用'),t("code",[s._v("${变量名}")]),s._v("包含变量名。")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=123")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# test="$test"456')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $test")]),s._v("\n123456\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#叠加变量test，变量值变成了123456")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=${test}789")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $test")]),s._v("\n123456789\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#再叠加变量test，变量值编程了123456789")]),s._v("\n")])])]),t("p",[s._v("变量值的叠加可以使用两种格式：“"),t("code",[s._v("$变量名")]),s._v("”或"),t("code",[s._v("${变量名}")])])]),s._v(" "),t("li",[t("p",[s._v("如果是把命令的结果作为变量值赋予变量，则需要使用"),t("code",[s._v("反引号")]),s._v("或"),t("code",[s._v("$()")]),s._v("包含命令。例如：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=$(date)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $test")]),s._v("\n2023年 12月 21日 星期四 15:43:49 CST\n")])])])]),s._v(" "),t("li",[t("p",[s._v("环境变量名建议大写，便于区分。")])])]),s._v(" "),t("h2",{attrs:{id:"变量的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量的分类"}},[s._v("#")]),s._v(" 变量的分类")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("用户自定义变量")]),s._v("：这种变量是最常见的变量，由用户自由定义变量名和变量的值。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("环境变量")]),s._v("：这种变量中主要保存的是和系统操作环境相关的数据，比如当前登录用户，用户的家目录，命令的提示符等。\n环境变量的变量名可以自由定义，但是一般对系统起作用的环境变量的变量名是系统预先设定好的。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("位置参数变量")]),s._v("：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("预定义变量")]),s._v("：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。")])])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\t\t\t\t名称\t\t\t作用\t\t\t内容\n用户自定义变量\t   自定义\t\t   自定义\t\t 自定义\t\n环境变量\n\t用户定义\t 自定义\t\t 自定义\t   自定义\n\t系统自带\t 确定\t\t \t 确定\t  \t \t自定义\n位置参数变量\t\t确定\t\t\t确定\t\t   自定义\n预定义变量\t\t确定\t\t\t 确定\t\t\t自定义\n")])])]),t("h2",{attrs:{id:"_1、用户自定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、用户自定义变量"}},[s._v("#")]),s._v(" 1、用户自定义变量")]),s._v(" "),t("p",[s._v("1）、变量定义")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量名不能用数字开头")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#等号左右两侧不能有空格")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量的值如果有空格，必须用引号包含")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# name=zs")]),s._v("\n")])])]),t("p",[s._v("2）、变量调用")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $变量名")]),s._v("\n")])])]),t("p",[s._v("3）、变量查看")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set [选项]")]),s._v("\n选项：\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u:\t如果设定此选项，调用未声明变量时会报错（默认无任何提示）\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("x:\t如果设定此选项，在命令执行之前，会吧命令先输出一次\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u 更为常用\n\n临时设置，如果需要永久设置，需要修改环境变量配置文件\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $age")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# age=""')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $age")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset age")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $age")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set -u")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $age")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bash: age: 为绑定变量\n")])])]),t("p",[s._v("查询环境变量")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#直接使用set命令，会查询系统中所有的变量，包含用户自定义变量和环境变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env看不到用户自定义变量，可以看到另一部分环境变量")]),s._v("\n")])])]),t("p",[s._v("4）、变量删除")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset 变量名")]),s._v("\n")])])]),t("h2",{attrs:{id:"_2、环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、环境变量"}},[s._v("#")]),s._v(" 2、环境变量")]),s._v(" "),t("blockquote",[t("p",[s._v("环境变量可以在子shell中使用")])]),s._v(" "),t("p",[s._v("1）、环境变量设置")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用export声明的变量即是环境变量")]),s._v("\n方式一：\nexport 变量名=变量值\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export ZS_AGE="18"')]),s._v("\n方式二：\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# ZS_AGE="18"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export ZS_AGE")]),s._v("\n")])])]),t("p",[s._v("2）、环境变量查询和删除")]),s._v(" "),t("p",[s._v("env命令和set命令的区别是，set命令可以查看所有变量，而env命令只能查看环境变量。")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# env | grep ZS_AGE")]),s._v("\nZS_AGE=18\n")])])]),t("p",[s._v("3）、系统默认环境变量")]),s._v(" "),t("p",[t("img",{attrs:{src:a(824),alt:"image-20231221163741313"}})]),s._v(" "),t("p",[s._v("​\t\tenv命令可以查询到所有的环境变量，可是还有一些变量虽然不是环境变量，却是和Bash操作接口相关的变量，这些变量也对我们的Bash操作终端起到了重要的作用。")]),s._v(" "),t("p",[s._v("这些变量就只能用set命令来查看了，我只列出重要的内容吧：")]),s._v(" "),t("p",[t("img",{attrs:{src:a(825),alt:"image-20231221163856981"}})]),s._v(" "),t("h3",{attrs:{id:"path变量-系统查找命令的路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#path变量-系统查找命令的路径"}},[s._v("#")]),s._v(" PATH变量："),t("font",{attrs:{color:"red"}},[s._v("系统查找命令的路径")])],1),s._v(" "),t("p",[s._v("先查询下PATH环境变量的值：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $PATH")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr/local/sbin:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr/local/bin:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr/sbin:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr/bin:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("root/bin\n")])])]),t("p",[s._v("​\t\tPATH变量的值是用“"),t("code",[s._v(":")]),s._v("”分割的路径，这些路径就是系统查找命令的路径。也就是说当我们输入了一个程序名，如果没有写入路径，系统就会到PATH变量定义的路径中去寻找，是否有可以执行的程序。如果找到则执行，否则会报“命令没有发现”的错误。")]),s._v(" "),t("p",[s._v("​\t\t那么是不是我们把自己的脚本拷贝到PATH变量定义的路径中，我们自己写的脚本也可以不输入路径而直接运行呢？")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cp /root/sh/hello.sh /bin/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#拷贝hello.sh到/bin目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# hello.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#hello.sh可以直接执行了")]),s._v("\n")])])]),t("p",[s._v("那么我们是不是可以修改PATH变量的值，而不是把程序脚本复制到"),t("code",[s._v("/bin/")]),s._v("目录中。当然是可以的，我们通过变量的叠加就可以实现了：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# PATH="$PATH":/root/sh')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $PATH")]),s._v("\n")])])]),t("p",[s._v("当然我们这样定义的PATH变量只是临时生效，一旦重启或注销就会消失，如果想要永久生效，需要写入环境变量配置文件，我们在“环境变量配置文件”小节中再详细介绍。")]),s._v(" "),t("h3",{attrs:{id:"ps1变量-命令提示符设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ps1变量-命令提示符设置"}},[s._v("#")]),s._v(" PS1变量："),t("font",{attrs:{color:"red"}},[s._v("命令提示符设置")])],1),s._v(" "),t("p",[s._v("PS1是一个很有意思的变量（这可不是SONY的游戏机哦），是用来定义命令行的提示符的，可以按照我们自己的需求来定义自己喜欢的提示符。")]),s._v(" "),t("p",[s._v("PS1可以支持以下这些选项：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("\\d")]),s._v("：显示日期，格式为"),t("code",[s._v("星期 月 日")])]),s._v(" "),t("li",[t("code",[s._v("\\H")]),s._v("：显示完整的主机名。如默认主机名"),t("code",[s._v("localhost.localdomain")])]),s._v(" "),t("li",[t("code",[s._v("\\h")]),s._v("：显示简写主机名。如默认主机名"),t("code",[s._v("localhost")])]),s._v(" "),t("li",[t("code",[s._v("\\t")]),s._v("：显示24小时制时间，格式为"),t("code",[s._v("HH:MM:SS")])]),s._v(" "),t("li",[t("code",[s._v("\\T")]),s._v("：显示12小时制时间，格式为"),t("code",[s._v("HH:MM:SS")])]),s._v(" "),t("li",[t("code",[s._v("\\A")]),s._v("：显示24小时制时间，格式为"),t("code",[s._v("HH:MM")])]),s._v(" "),t("li",[t("code",[s._v("\\@")]),s._v("：显示12小时制时间，格式为"),t("code",[s._v("HH:MM am/pm")])]),s._v(" "),t("li",[t("code",[s._v("\\u")]),s._v("：显示当前用户名")]),s._v(" "),t("li",[t("code",[s._v("\\v")]),s._v("：显示Bash的版本信息")]),s._v(" "),t("li",[t("code",[s._v("\\w")]),s._v("：显示当前所在目录的完整名称")]),s._v(" "),t("li",[t("code",[s._v("\\W")]),s._v("：显示当前所在目录的最后一个目录")]),s._v(" "),t("li",[t("code",[s._v("\\#")]),s._v("：执行的第几个命令")]),s._v(" "),t("li",[t("code",[s._v("\\$")]),s._v("：提示符。如果是root用户会显示提示符为"),t("code",[s._v("#")]),s._v("，如果是普通用户会显示提示符为"),t("code",[s._v("$")])])]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi /]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $PS1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\\u@\\h \\W"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\\$\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi /]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PS1='[\\u@\\H:\\A \\W]\\$ '")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi:17:09 /]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])])]),t("p",[s._v("这里要小心，PS1变量的值要用单引号包含，否则设置不生效。")]),s._v(" "),t("p",[s._v("对应永久环境变量配置文件: "),t("code",[s._v("/etc/bashrc")])]),s._v(" "),t("h3",{attrs:{id:"lang语系变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lang语系变量"}},[s._v("#")]),s._v(" LANG语系变量")]),s._v(" "),t("p",[s._v("LANG变量定义了Linux系统的主语系环境，这个变量的默认值是：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $LANG")]),s._v("\nzh_CN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("UTF-8\n")])])]),t("p",[s._v("这是因为我们Linux安装时，选择的是中文安装，所以默认的主语系变量是“zh_CN.UTF-8”。")]),s._v(" "),t("p",[s._v("那么Linux中到底支持多少语系呢？我们可以使用以下命令查询：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# locale -a | wc -l")]),s._v("\n791\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# locale -a | more")]),s._v("\n")])])]),t("h2",{attrs:{id:"_3、位置参数变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、位置参数变量"}},[s._v("#")]),s._v(" 3、位置参数变量")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("位置参数变量")]),s._v(" "),t("th",[s._v("作用")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("$n")])]),s._v(" "),t("td",[s._v("n为数字，"),t("code",[s._v("$0")]),s._v("代表命令本身，"),t("code",[s._v("$1-$9")]),s._v("代表第一到第九个参数，十以上的参数需要用大括号包含，如"),t("code",[s._v("${10}.")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$*")])]),s._v(" "),t("td",[s._v("这个变量代表命令行中所有的参数，"),t("code",[s._v("$*")]),s._v("把所有的参数看成一个整体")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$@")])]),s._v(" "),t("td",[s._v("这个变量也代表命令行中所有的参数，不过"),t("code",[s._v("$@")]),s._v("把每个参数区分对待")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$#")])]),s._v(" "),t("td",[s._v("这个变量代表命令行中所有参数的个数")])])])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给a变量赋值 第1个参数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给a变量赋值 第2个参数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sum=a+b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell中的变量默认是字符串类型，再后续运算符中详细介绍")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v(" $a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" $b "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印sum变量值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sum")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印脚本本身")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v("\n")])])]),t("p",[s._v("那么还有几个位置参数变量是干嘛的呢？我们在写个脚本来说明下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./parameter.sh ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./parameter.sh 11 22 33 44")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("44")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("44")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat parameter.sh ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$*'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$@'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$#'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$#")]),s._v('"')]),s._v("\n")])])]),t("p",[s._v("那么“"),t("code",[s._v("$*")]),s._v("”和“"),t("code",[s._v("$@")]),s._v("”有区别吗？还是有区别的，"),t("code",[s._v("$*")]),s._v("会把接收的所有参数当成一个整体对待，而"),t("code",[s._v("$@")]),s._v("则会区分对待接收到的所有参数。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat ./parameter2.sh ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v('"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'==================='")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义for循环，in后面有几个值，for会循环多少次，注意“$*”要用双引号括起来")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每次循环会把in后面的值赋予变量j")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Shell把$*中的所有参数看成是一个整体，所以这个for循环只会循环一次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("j")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$*")]),s._v('"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#打印变量$i的值")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$j")]),s._v('"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'==================='")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("k")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$k")]),s._v('"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'==================='")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./parameter2.sh a b c 1 2 3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\na b c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\na\nb\nc\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n")])])]),t("h2",{attrs:{id:"_4、预定义变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、预定义变量"}},[s._v("#")]),s._v(" 4、预定义变量")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("预定义变量")]),s._v(" "),t("th",[s._v("作用")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("$?")])]),s._v(" "),t("td",[s._v("最后一次执行的命令的返回状态。"),t("br"),s._v("如果这个变量的值为0，证明上一个命令正确执行；"),t("br"),s._v("如果这个变量的值为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$$")])]),s._v(" "),t("td",[s._v("当前进程的进程号（PID）")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("$!")])]),s._v(" "),t("td",[s._v("后台运行的最后一个进程的进程号（PID）")])])])]),s._v(" "),t("p",[s._v("我们先来看看“"),t("code",[s._v("$?")]),s._v("”这个变量，看起来不好理解，我们还是举个例子：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls")]),s._v("\ncount"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh  file1  file2  file3  parameter2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh  parameter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh  sh  zs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $?")]),s._v("\n0\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#预定义变量“$?”的值是0，证明上一个命令执行正确")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls aaa")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(": 无法访问aaa: 没有那个文件或目录\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@xiaoshaozi ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $?")]),s._v("\n2\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#当前目录中没有aaa文件，所以ls命令报错了")]),s._v("\n")])])]),t("p",[s._v("接下来我们来说明下“"),t("code",[s._v("$$")]),s._v("”和“"),t("code",[s._v("$!")]),s._v("”这两个预定义变量，我们写个脚本吧：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim variable.sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The current process is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出当前进程的PID")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个PID就是variable.sh这个脚本执行时，生成的进程的PID")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /root "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-name")]),s._v(" hello.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用find命令在root目录下查找hello.sh文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 符号&的意思是吧命令放入后台执行，工作管理我们系统管理章节介绍")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The last one Daemon process is '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出这个后台执行命令的进程的PID，也就是输出find命令的PID号")]),s._v("\n")])])]),t("h2",{attrs:{id:"接收键盘输入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接收键盘输入"}},[s._v("#")]),s._v(" 接收键盘输入")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read [选项] [变量名]")]),s._v("\n选项：\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\t“提示信息”：\t  在等待read输入时，输出提示信息\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v("\t秒数：\t\t read命令会一直等待用户输入，使用此选项可以指定等待时间\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v("\t字符数：\tread命令只接受指定的字符数，就会执行\n\t-s：\t\t\t  隐藏输入的数据，适用于机密信息的输入\n\t\n变量名：\n\t- 变量名可以自定义，如果不指定变量名，会把输入保存入默认变量"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("REPLY")]),s._v("\n\t- 如果只提供了一个变量名，则整个输入行赋予该变量\n\t- 如果提供了一个以上的变量名，则输入行分为若干字，一个接一个地赋予各个变量，\n\t  而命令行上如果提供了一个以上的变量名，则输入行分为若干字，一个接一个地赋予各个变量，而命令行上\n")])])]),t("p",[s._v("还是写个例子来解释下read命令：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat read.sh ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-s")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Please input your name: "')]),s._v(" name age\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$name")]),s._v(" ===== "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$age")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bash read.sh")]),s._v("\n\n")])])]),t("h2",{attrs:{id:"shell的运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell的运算符"}},[s._v("#")]),s._v(" Shell的运算符")]),s._v(" "),t("h3",{attrs:{id:"_1-数值运算的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数值运算的方法"}},[s._v("#")]),s._v(" 1）数值运算的方法")]),s._v(" "),t("p",[s._v("那如果我需要进行数值运算，可以采用以下三种方法中的任意一种：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用declare声明变量类型")]),s._v(" "),t("p",[s._v("既然所有变量的默认类型是字符串型，那么只要我们把变量声明为整数型不就可以运算了吗？使用declare命令就可以实现声明变量的类型。命令如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare [+/-][选项] 变量名")]),s._v("\n选项:\n    -：给变量设定类型属性\n    +：取消变量的类型属性\n    -a：将变量声明为数组型\n    -i：将变量声明为整数型（integer）\n    -r：讲变量声明为只读变量。\n    \t注意，一旦设置为只读变量，既不能修改变量的值，也不能删除变量，甚至不能通过+r取消只读属性\n    -x：将变量声明为环境变量\n    -p：显示指定变量的被声明的类型\n")])])]),t("p",[s._v("例子1：数值运算")]),s._v(" "),t("p",[s._v("那我们只要把变量声明为整数型不就可以运算了吗？试试吧：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a=1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# b=2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# c=$a+$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("+2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -i c=$a+$b")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),t("p",[s._v("这样运算好麻烦啊，没有办法啊，Shell在数值运算这里确实是比较麻烦，习惯就好了-_-!。")]),s._v(" "),t("p",[s._v("例子2：数组变量类型")]),s._v(" "),t("p",[s._v("还是举个例子吧：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# declare -a name[0]="shen chao"')]),s._v("\n\n由于太特殊，可以省略 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# name[0]="shen chao"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# name[1]="li ming"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# name[2]="tong gang"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${name}")]),s._v("\nshen chao\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo ${name[*]}")]),s._v("\nshen chao li ming tong gang\n\n")])])]),t("p",[s._v("例子3：环境变量")]),s._v(" "),t("p",[s._v("我们其实也可以使用"),t("code",[s._v("declare")]),s._v("命令把变量声明为环境变量，和"),t("code",[s._v("export")]),s._v("命令的作用是一样的：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -x test=123")]),s._v("\n")])])]),t("p",[s._v("例子4：只读属性")]),s._v(" "),t("p",[s._v("注意一旦给变量设定了只读属性，那么这个变量既不能修改变量的值，也不能删除变量，甚至不能使用“+r”选项取消只读属性。命令如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@xiaoshaozi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -r test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test=456")]),s._v("\n-bash: test: "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" variable\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#test变量的值就不能修改了")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare +r test")]),s._v("\n-bash: declare: test: "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" variable\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也不能取消只读属性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset test")]),s._v("\n-bash: unset: test: cannot unset: "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("readonly")]),s._v(" variable\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#也不能删除变量")]),s._v("\n")])])]),t("p",[s._v("不过还好这个变量只是命令行声明的，所以只要重新登录或重启，这个变量就会消失了。")]),s._v(" "),t("p",[s._v("例子5：查询变量属性和取消变量属性")]),s._v(" "),t("p",[s._v("变量属性的查询使用“-p”选项，变量属性的取消使用“+”选项。命令如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -p cc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cc")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"33"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cc变量是int型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -p name")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'([0]="shen chao" [1]="li ming" [2]="tong gang")\'')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#name变量是数组型")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -p test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rx")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#test变量是环境变量和只读变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare +x test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#取消test变量的环境变量属性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# declare -p test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注意，只读变量属性是不能取消的")]),s._v("\n")])])])]),s._v(" "),t("li",[t("p",[s._v("使用"),t("code",[s._v("expr")]),s._v("或"),t("code",[s._v("let")]),s._v("数值运算工具")]),s._v(" "),t("p",[s._v("要想进行数值运算的第二种方法是使用expr命令，这种命令就没有declare命令复杂了。命令如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aa=11")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bb=22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#给变量aa和变量bb赋值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dd=$(expr $aa + $bb)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#dd的值是aa和bb的和。注意“+”号左右两侧必须有空格")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $dd")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n")])])]),t("p",[s._v("使用expr命令进行运算时，要注意“+”号左右两侧必须有空格，否则运算不执行。")]),s._v(" "),t("p",[s._v("至于let命令和expr命令基本类似，都是Linux中的运算命令，命令格式如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aa=11")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bb=22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#给变量aa和变量bb赋值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let ee=$aa+$bb")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $ee")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量ee的值是aa和bb的和")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# n=20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#定义变量n")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# let n+=1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量n的值等于变量本身再加1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $n")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n")])])]),t("p",[s._v("expr命令和let命令大家可以按照习惯使用，不过let命令对格式要求要比expr命令宽松，所以推荐使用let命令进行数值运算。")])]),s._v(" "),t("li",[t("p",[s._v("使用“"),t("code",[s._v("$((运算式))")]),s._v("”或“"),t("code",[s._v("$[运算式]")]),s._v("”方式运算")]),s._v(" "),t("p",[s._v("其实这是一种方式“"),t("code",[s._v("$(())")]),s._v("”和“"),t("code",[s._v("$[]")]),s._v("”这两种括号按照个人习惯使用即可。命令如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aa=11")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bb=22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ff=$(( $aa+$bb ))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $ff")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量ff的值是aa和bb的和")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gg=$[ $aa+$bb ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $gg")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#变量gg的值是aa和bb的和")]),s._v("\n")])])]),t("p",[s._v("这三种数值运算方式，大家可以按照自己的习惯来进行使用。不过我们推荐使用“"),t("code",[s._v("$((运算式))")]),s._v("”的方式")])])]),s._v(" "),t("h3",{attrs:{id:"_2-、shell常用运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-、shell常用运算符"}},[s._v("#")]),s._v(" 2）、Shell常用运算符")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("优先级")]),s._v(" "),t("th",[s._v("运算符")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("13")]),s._v(" "),t("td",[s._v("-,+")]),s._v(" "),t("td",[s._v("单目负、单目正")])]),s._v(" "),t("tr",[t("td",[s._v("12")]),s._v(" "),t("td",[s._v("!,~")]),s._v(" "),t("td",[s._v("逻辑非、按位取反或补码")])]),s._v(" "),t("tr",[t("td",[s._v("11")]),s._v(" "),t("td",[s._v("* ,/ ,%")]),s._v(" "),t("td",[s._v("乘、除、取模")])]),s._v(" "),t("tr",[t("td",[s._v("10")]),s._v(" "),t("td",[s._v("+,-")]),s._v(" "),t("td",[s._v("加、减")])]),s._v(" "),t("tr",[t("td",[s._v("9")]),s._v(" "),t("td",[s._v("<< ,>>")]),s._v(" "),t("td",[s._v("按位左移、按位右移")])]),s._v(" "),t("tr",[t("td",[s._v("8")]),s._v(" "),t("td",[s._v("< =,> =,< ,>")]),s._v(" "),t("td",[s._v("小于或等于、大于或等于、小于、大于")])]),s._v(" "),t("tr",[t("td",[s._v("7")]),s._v(" "),t("td",[s._v("== ,!=")]),s._v(" "),t("td",[s._v("等于、不等于")])]),s._v(" "),t("tr",[t("td",[s._v("6")]),s._v(" "),t("td",[s._v("&")]),s._v(" "),t("td",[s._v("按位与")])]),s._v(" "),t("tr",[t("td",[s._v("5")]),s._v(" "),t("td",[s._v("^")]),s._v(" "),t("td",[s._v("按位异或")])]),s._v(" "),t("tr",[t("td",[s._v("4")]),s._v(" "),t("td",[s._v("|")]),s._v(" "),t("td",[s._v("按位或")])]),s._v(" "),t("tr",[t("td",[s._v("3")]),s._v(" "),t("td",[s._v("&&")]),s._v(" "),t("td",[s._v("逻辑与")])]),s._v(" "),t("tr",[t("td",[s._v("2")]),s._v(" "),t("td",[s._v("||")]),s._v(" "),t("td",[s._v("逻辑或")])]),s._v(" "),t("tr",[t("td",[s._v("1")]),s._v(" "),t("td",[s._v("=,+=,-=,*=,/=,%=,&=,^=,|=,<<=, >>=")]),s._v(" "),t("td",[s._v("赋值、运算且赋值")])])])]),s._v(" "),t("p",[s._v("运算符优先级表明在每个表达式或子表达式中哪一个运算对象首先被求值，数值越大优先级越高，具有较高优先级级别的运算符先于较低级别的运算符进行求值运算。")]),s._v(" "),t("p",[s._v("例子1：加减乘除")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# aa=$(( (11+3)*3/2 ))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $aa")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v("\n")])])]),t("p",[s._v("例子2：取模运算")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bb=$(( 14%3 ))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $bb")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])])]),t("p",[s._v("例子3：逻辑与")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cc=$(( 1 && 0 ))")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $cc")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),t("h3",{attrs:{id:"变量的测试与内容置换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量的测试与内容置换"}},[s._v("#")]),s._v(" 变量的测试与内容置换")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("变量置换方式")]),s._v(" "),t("th",[s._v("变量y没有设置")]),s._v(" "),t("th",[s._v("变量y为空值")]),s._v(" "),t("th",[s._v("变量y设置值")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("x=${y-新值}")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])]),s._v(" "),t("td",[t("code",[s._v("x为空")])]),s._v(" "),t("td",[t("code",[s._v("x=$y")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y:-新值}")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=$y")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y+新值}")])]),s._v(" "),t("td",[t("code",[s._v("x为空")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y:+新值}")])]),s._v(" "),t("td",[t("code",[s._v("x为空")])]),s._v(" "),t("td",[t("code",[s._v("x为空")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y=新值}")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")]),t("br"),t("code",[s._v("y=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=为空")]),t("br"),t("code",[s._v("y=值不变")])]),s._v(" "),t("td",[t("code",[s._v("x=$y")]),t("br"),t("code",[s._v("y值不变")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y:=新值}")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")]),t("br"),t("code",[s._v("y=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=新值")]),t("br"),t("code",[s._v("y=新值")])]),s._v(" "),t("td",[t("code",[s._v("x=$y")]),t("br"),t("code",[s._v("y值不变")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y?新值}")])]),s._v(" "),t("td",[s._v("新值输出到"),t("br"),s._v("标准错误输出（就是屏幕）")]),s._v(" "),t("td",[t("code",[s._v("x为空")])]),s._v(" "),t("td",[t("code",[s._v("x=$y")])])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("x=${y:?新值}")])]),s._v(" "),t("td",[s._v("新值输出到"),t("br"),s._v("标准错误输出")]),s._v(" "),t("td",[s._v("新值输出到"),t("br"),s._v("标准错误输出")]),s._v(" "),t("td",[t("code",[s._v("x=$y")])])])])]),s._v(" "),t("p",[s._v("通过"),t("code",[s._v("set -u")]),s._v("可以让未定义变量报错")]),s._v(" "),t("p",[s._v("如果大括号内没有“：”，则变量y是为空，还是没有设置，处理方法是不同的；如果大括号内有“：”，则变量y不论是为空，还是没有没有设置，处理方法是一样的。")]),s._v(" "),t("p",[s._v("如果大括号内是“-”或“+”，则在改变变量x值的时候，变量y是不改变的；如果大括号内是“=”，则在改变变量x值的同时，变量y的值也会改变。")]),s._v(" "),t("p",[s._v("如果大括号内是“？”，则当变量y不存在或为空时，会把“新值”当成报错输出到屏幕上。")]),s._v(" "),t("p",[s._v("看的头都晕了吧，举几个例子说明下吧：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unset y")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# x=${y-new}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $x")]),s._v("\nnew\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $y")]),s._v("\n\n")])])]),t("h2",{attrs:{id:"环境变量配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境变量配置文件"}},[s._v("#")]),s._v(" 环境变量配置文件")]),s._v(" "),t("h3",{attrs:{id:"source命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#source命令"}},[s._v("#")]),s._v(" source命令")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source 配置文件")]),s._v("\n或 \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# . 配置文件")]),s._v("\n")])])]),t("h3",{attrs:{id:"环境变量配置文件-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境变量配置文件-2"}},[s._v("#")]),s._v(" 环境变量配置文件")]),s._v(" "),t("p",[s._v("1）、登录时生效的环境变量配置文件")]),s._v(" "),t("p",[s._v("在Linux系统登录时主要生效的环境变量配置文件有以下五个：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("/etc/profile")])]),s._v(" "),t("li",[t("code",[s._v("/etc/profile.d/*.sh")])]),s._v(" "),t("li",[t("code",[s._v("~/.bash_profile")])]),s._v(" "),t("li",[t("code",[s._v("~/.bashrc")])]),s._v(" "),t("li",[t("code",[s._v("/etc/bashrc")])])]),s._v(" "),t("p",[s._v("环境变量配置文件调用过程")]),s._v(" "),t("p",[t("img",{attrs:{src:a(826),alt:"image-20231226135232164"}})]),s._v(" "),t("p",[s._v("在用户登录过程先调用"),t("code",[s._v("/etc/profile")]),s._v("文件")]),s._v(" "),t("p",[s._v("在这个环境变量配置文件中会定义这些默认环境变量：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("USER")]),s._v("变量：根据登录的用户，给这个变量赋值（就是让USER变量的值是当前用户）。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("LOGNAME")]),s._v("变量：根据USER变量的值，给这个变量赋值。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("MAIL")]),s._v("变量：根据登录的用户，定义用户的邮箱为"),t("code",[s._v("/var/spool/mail/")]),s._v("用户名。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("PATH")]),s._v("变量：根据登录用户的UID是否为0，判断"),t("code",[s._v("PATH")]),s._v("变量是否包含"),t("code",[s._v("/sbin")]),s._v("、"),t("code",[s._v("/usr/sbin")]),s._v("和"),t("code",[s._v("/usr/local/sbin")]),s._v("这三个系统命令目录。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("HOSTNAME")]),s._v("变量：更加主机名，给这个变量赋值。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("HISTSIZE")]),s._v("变量：定义历史命令的保存条数。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("umask")]),s._v("：定义umask默认权限。注意"),t("code",[s._v("/etc/profile")]),s._v("文件中的"),t("code",[s._v("umask")]),s._v("权限是在“有用户登录过程（也就是输入了用户名和密码）”时才会生效。")])]),s._v(" "),t("li",[t("p",[s._v("调用"),t("code",[s._v("/etc/profile.d/*.sh")]),s._v("文件，也就是调用"),t("code",[s._v("/etc/profile.d/")]),s._v("目录下所有以"),t("code",[s._v(".sh")]),s._v("结尾的文件。")])]),s._v(" "),t("li",[t("p",[s._v("由"),t("code",[s._v("/etc/profile")]),s._v("文件调用"),t("code",[s._v("/etc/profile.d/*.sh")]),s._v("文件")])])]),s._v(" "),t("p",[s._v("这个目录中所有以"),t("code",[s._v(".sh")]),s._v("结尾的文件都会被"),t("code",[s._v("/etc/profile")]),s._v("文件调用，这里最常用的就是"),t("code",[s._v("lang.sh")]),s._v("文件，而这个文件又会调用"),t("code",[s._v("/etc/sysconfig/i18n")]),s._v("文件。"),t("code",[s._v("/etc/sysconfig/i18n")]),s._v("这个文件眼熟吗？就是我们前面讲过的默认语系配置文件啊。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由"),t("code",[s._v("/etc/profile")]),s._v("文件调用"),t("code",[s._v("~/.bash_profile")]),s._v("文件\n"),t("code",[s._v("~/.bash_profile")]),s._v("文件就没有那么复杂了，这个文件主要实现了两个功能：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("调用了"),t("code",[s._v("~/.bashrc")]),s._v("文件。")])]),s._v(" "),t("li",[t("p",[s._v("在"),t("code",[s._v("PATH")]),s._v("变量后面加入了“"),t("code",[s._v(":$HOME/bin")]),s._v("”这个目录。那也就是说，如果我们在自己的家目录中建立"),t("code",[s._v("bin")]),s._v("目录，然后把自己的脚本放入“"),t("code",[s._v("~/bin")]),s._v("”目录，就可以直接执行脚本，而不用通过目录执行了。")])])])]),s._v(" "),t("li",[t("p",[s._v("由"),t("code",[s._v("~/.bash_profile")]),s._v("文件调用"),t("code",[s._v("~/.bashrc")]),s._v("文件\n在"),t("code",[s._v("~/.bashrc")]),s._v("文件中主要实现了：")]),s._v(" "),t("ul",[t("li",[s._v("定义默认别名，所以超哥把自己定义的别名也放入了这个文件。")]),s._v(" "),t("li",[s._v("调用"),t("code",[s._v("/etc/bashrc")])])])]),s._v(" "),t("li",[t("p",[s._v("由"),t("code",[s._v("~/.bashrc")]),s._v("调用了"),t("code",[s._v("/etc/bashrc")]),s._v("文件\n在/etc/bashrc文件中主要定义了这些内容：")]),s._v(" "),t("ul",[t("li",[s._v("PS1变量：也就是用户的提示符，如果我们想要永久修改提示符，就要在这个文件中修改")]),s._v(" "),t("li",[s._v("umask：定义umask默认权限。这个文件中定义的umask是针对“没有登录过程（也就是不需要输入用户名和密码时，比如从一个终端切换到另一个终端，或进入子Shell）”时生效的。如果是“有用户登录过程”，则是/etc/profile文件中的umask生效。")]),s._v(" "),t("li",[s._v("PATH变量：会给PATH变量追加值，当然也是在“没有登录过程”时才生效。")]),s._v(" "),t("li",[s._v("调用"),t("code",[s._v("/etc/profile.d/*.sh")]),s._v("文件，这也是在“没有用户登录过程”是才调用。在“有用户登录过程”时，"),t("code",[s._v("/etc/profile.d/*.sh")]),s._v("文件已经被"),t("code",[s._v("/etc/profile")]),s._v("文件调用过了。")])])])]),s._v(" "),t("p",[s._v("这样这五个环境变量配置文件会被依次调用，那么如果是我们自己定义的环境变量应该放入哪个文件呢？如果你的修改是打算对所有用户生效的，那么可以放入"),t("code",[s._v("/etc/profile")]),s._v("环境变量配置文件；如果你的修改只是给自己使用的，那么可以放入"),t("code",[s._v("~/.bash_profile")]),s._v("或"),t("code",[s._v("~/.bashrc")]),s._v("这两个配置文件中的任一个。")]),s._v(" "),t("p",[s._v("可是如果我们误删除了这些环境变量，比如删除了"),t("code",[s._v("/etc/bashrc")]),s._v("文件，或删除了"),t("code",[s._v("~/.bashrc")]),s._v("文件，那么这些文件中配置就会失效（"),t("code",[s._v("~/.bashrc")]),s._v("文件会调用"),t("code",[s._v("/etc/bashrc")]),s._v("文件）。那么我们的提示符就会变成：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("-bash-4.1"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])])]),t("p",[s._v("2）、注销时生效的环境变量配置文件")]),s._v(" "),t("p",[s._v("在用户退出登录时，只会调用一个环境变量配置文件，就是"),t("code",[s._v("~/.bash_logout")]),s._v("。这个文件默认没有写入任何内容，可是如果我们希望再退出登录时执行一些操作，比如清除历史命令，备份某些数据，就可以把命令写入这个文件。")]),s._v(" "),t("p",[s._v("3）、其他配置文件")]),s._v(" "),t("p",[s._v("还有一些环节变量配置文件，最常见的就是"),t("code",[s._v("~/bash_history")]),s._v("文件，也就是历史命令保存文件。这个文件已经讲过了，这里我们只是把它归入环境变量配置文件小节而已。")]),s._v(" "),t("h3",{attrs:{id:"shell登录信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell登录信息"}},[s._v("#")]),s._v(" Shell登录信息")]),s._v(" "),t("p",[s._v("1)、"),t("code",[s._v("/etc/issue")])]),s._v(" "),t("p",[s._v("我们在登录tty1-tty6这六个本地终端时，会有几行的欢迎界面。这些欢迎信息是保存在哪里的？可以修改吗？当然可以修改，这些欢迎信息是保存在/etc/issue文件中，我们查看下这个文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/issue")]),s._v("\nCentOS release "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Final"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nKernel "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("r on an "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("m\n")])])]),t("p",[s._v("可以支持的转义符我们可以通过man agetty命令查询，在表中我们列出常见的转义符作用：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("转义符")]),s._v(" "),t("th",[s._v("作用")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("\\d")]),s._v(" "),t("td",[s._v("显示当前系统日期")])]),s._v(" "),t("tr",[t("td",[s._v("\\s")]),s._v(" "),t("td",[s._v("显示操作系统名称")])]),s._v(" "),t("tr",[t("td",[s._v("\\l")]),s._v(" "),t("td",[s._v("显示登录的终端号，这个比较常用。")])]),s._v(" "),t("tr",[t("td",[s._v("\\m")]),s._v(" "),t("td",[s._v("显示硬件体系结构，如i386、i686等")])]),s._v(" "),t("tr",[t("td",[s._v("\\n")]),s._v(" "),t("td",[s._v("显示主机名")])]),s._v(" "),t("tr",[t("td",[s._v("\\o")]),s._v(" "),t("td",[s._v("显示域名")])]),s._v(" "),t("tr",[t("td",[s._v("\\r")]),s._v(" "),t("td",[s._v("显示内核版本")])]),s._v(" "),t("tr",[t("td",[s._v("\\t")]),s._v(" "),t("td",[s._v("显示当前系统时间")])]),s._v(" "),t("tr",[t("td",[s._v("\\u")]),s._v(" "),t("td",[s._v("显示当前登录用户的序列号")])])])]),s._v(" "),t("p",[s._v("2)、"),t("code",[s._v("/etc/issue.net")])]),s._v(" "),t("p",[t("code",[s._v("/etc/issue")]),s._v("是在本地终端登录是显示欢迎信息的，如果是远程登录（如ssh远程登录，或telnet远程登录）需要显示欢迎信息，则需要配置"),t("code",[s._v("/etc/issue.net")]),s._v("这个文件了。使用这个文件时由两点需要注意：")]),s._v(" "),t("ul",[t("li",[s._v("首先，在"),t("code",[s._v("/etc/issue")]),s._v("文件中支持的转义符，在"),t("code",[s._v("/etc/issue.net")]),s._v("文件中不能使用。")]),s._v(" "),t("li",[s._v("其次，ssh远程登录是否显示"),t("code",[s._v("/etc/issue.net")]),s._v("件中的欢迎信息，是由ssh的配置文件决定的。")])]),s._v(" "),t("p",[s._v("如果我们需要ssh远程登录可以查看"),t("code",[s._v("/etc/issue.net")]),s._v("的欢迎信息，那么首先需要修改ssh的配置文件"),t("code",[s._v("/etc/ssh/sshd_config")]),s._v("，加入如下内容：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/ssh/sshd_config")]),s._v("\n…省略部分输出…\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# no default banner path")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Banner none")]),s._v("\nBanner /etc/issue.net\n…省略部分输出…\n")])])]),t("p",[s._v("这样在ssh远程登录时，也可以显示欢迎信息，只是不再可以识别“\\d”和“\\l”等信息了")]),s._v(" "),t("p",[s._v("3)、/etc/motd")]),s._v(" "),t("p",[s._v("/etc/motd文件中也是显示欢迎信息的，这个文件和/etc/issue及/etc/issue.net文件的区别是：/etc/issue及/etc/issue.net是在用户登录之前显示欢迎信息，而/etc/motd是在用户输入用户名和密码，正确登录之后显示欢迎信息。在/etc/motd文件中的欢迎信息，不论是本地登录，还是远程登录都可以显示。")]),s._v(" "),t("h3",{attrs:{id:"定义bash快捷键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义bash快捷键"}},[s._v("#")]),s._v(" 定义Bash快捷键")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stty -a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询所有的快捷键")]),s._v("\n")])])]),t("p",[s._v("那么这些快捷键可以更改吗？可以啊，只要执行：")]),s._v(" "),t("div",{staticClass:"language-powershell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-powershell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stty 关键字 快捷键")]),s._v("\n\n例如：\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stty intr ^p")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义ctrl+p快捷键为强制终止，“^”字符只要手工输入即可")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("[root@localhost ~]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stty -a")]),s._v("\nspeed 38400 baud"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" rows 21"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" columns 104"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" line = 0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nintr = ^P"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" quit = ^\\"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("erase")]),s._v(" = ^?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" = ^U"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eof = ^D"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eol = <undef>"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eol2 = <undef>"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" swtch = <undef>"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),s._v(" = ^Q"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" stop = ^S"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" susp = ^Z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" rprnt = ^R"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" werase = ^W"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" lnext = ^V"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" flush = ^O"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" min =1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("time = 0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制终止变成了ctrl+p快捷键")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports},824:function(s,t,a){s.exports=a.p+"assets/img/image-20231221163741313.85159478.png"},825:function(s,t,a){s.exports=a.p+"assets/img/image-20231221163856981.4e12de7d.png"},826:function(s,t,a){s.exports=a.p+"assets/img/image-20231226135232164.6edf5005.png"}}]);